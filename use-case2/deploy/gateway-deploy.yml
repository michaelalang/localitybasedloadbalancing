apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-v1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      istio: gateway-v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
      creationTimestamp: null
      labels:
        istio: gateway-v1
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - image: auto
          imagePullPolicy: Always
          name: istio-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        topology.kubernetes.io/zone: zone1
        topology.istio.io/subzone: zone1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-v2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      istio: gateway-v2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
      creationTimestamp: null
      labels:
        istio: gateway-v2
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - image: auto
          imagePullPolicy: Always
          name: istio-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        topology.kubernetes.io/zone: zone2
        topology.istio.io/subzone: zone2
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
